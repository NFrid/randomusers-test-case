{"version":3,"sources":["api/users.ts","components/AppContext.ts","components/UserCard.tsx","components/SortedUserCard.tsx","components/UsersGroup.tsx","components/SortedUsers.tsx","components/FavoriteUserCard.tsx","components/FavoriteUsers.tsx","App.tsx","index.tsx"],"names":["usersApi","getUsers","n","nat","axios","method","url","then","res","data","results","AppContext","createContext","users","Array","setUsers","_","sortedUsers","setSortedUsers","favoriteUsers","setFavoriteUsers","loading","setLoading","dragToFav","setDragToFav","UserCard","user","highlight","append","useState","fullName","setFullName","useEffect","name","first","last","replace","RegExp","className","src","picture","medium","alt","dangerouslySetInnerHTML","__html","Date","registered","date","toLocaleDateString","email","SortedUserCard","dragStartHandler","dragEndHandler","draggable","onDragStart","onDragEnd","UsersGroup","search","num","parentRef","React","useRef","useContext","filtered","setFiltered","collapse","setCollapse","rowVirtualizer","useVirtual","size","length","estimateSize","useCallback","filter","toLowerCase","indexOf","onClick","ref","style","maxHeight","overflow","height","totalSize","width","position","virtualItems","map","virtualRow","index","top","left","transform","start","e","i","id","dataTransfer","setData","JSON","stringify","login","uuid","SortedUsers","inputRef","document","addEventListener","current","focus","setSearch","sorted","forEach","age","push","sortUsersByDecAge","type","placeholder","onChange","target","value","FavoriteUserCard","removeHandler","dragEnterHandler","dragLeaveHandler","dragOverHandler","dropHandler","onDragEnter","onDragLeave","onDragOver","onDrop","FavoriteUsers","dragged","setDragged","moveInArray","arr","from","to","temp","item","splice","preventDefault","stopPropagation","newFavorite","getData","ids","parse","includes","addFavoriteUser","currentTarget","classList","remove","removeFavoriteUser","add","App","context","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.34c6cfdb.chunk.js","sourcesContent":["import axios from 'axios';\nimport User from '../types/User';\n\nconst usersApi = {\n  getUsers: (n: number, nat = 'us'): Promise<User[]> =>\n    axios({\n      method: 'GET',\n      url: `https://randomuser.me/api/?results=${n}&nat=${nat}`,\n    }).then(res => res.data.results)\n};\nexport default usersApi;\n","import { createContext } from 'react';\nimport User from '../types/User';\n\n/**\n * context provider for the app\n * a.k.a. global (app scoped) state\n */\nconst AppContext = createContext({\n  users: Array<User>(),\n  setUsers: (_: User[]) => {},\n  sortedUsers: Array<User[]>(),\n  setSortedUsers: (_: User[][]) => {},\n  favoriteUsers: Array<User>(),\n  setFavoriteUsers: (_: User[]) => {},\n  loading: true,\n  setLoading: (_: boolean) => {},\n  dragToFav: false,\n  setDragToFav: (_: boolean) => {},\n});\n\nexport default AppContext;\n","import { FC, useEffect, useState } from 'react';\nimport User from '../types/User';\n\ninterface IUserCard {\n  user: User;\n  highlight?: string;\n  append?: React.ReactNode;\n}\n\n/** general user card component, can append additional component */\nconst UserCard: FC<IUserCard> = ({ user, highlight, append }) => {\n  const [fullName, setFullName] = useState('');\n\n  useEffect(() => {\n    const name = `${user.name.first} ${user.name.last}`;\n    setFullName(\n      highlight ? name.replace(new RegExp(highlight, 'i'), `<b>$&</b>`) : name\n    );\n  }, [highlight, user]);\n\n  return (\n    <div className=\"user-card\">\n      <img className=\"photo\" src={user.picture.medium} alt=\"\" />\n      <div className=\"credentials\">\n        <div className=\"credentials-top\">\n          <div\n            className=\"name\"\n            dangerouslySetInnerHTML={{ __html: fullName }}\n          />\n          <div className=\"registration-date\">\n            {new Date(user.registered.date).toLocaleDateString()}\n          </div>\n        </div>\n        <div className=\"credentials-bottom\">\n          <div className=\"email\">{user.email}</div>\n        </div>\n      </div>\n      {append ? append : ''}\n    </div>\n  );\n};\nexport default UserCard;\n","import { FC } from 'react';\nimport User from '../types/User';\nimport UserCard from './UserCard';\n\ninterface ISortedUserCard {\n  user: User;\n  highlight: string;\n  dragStartHandler: (e: React.DragEvent<HTMLDivElement>) => void;\n  dragEndHandler: () => void;\n}\n\n/** wrapper for UserCard taking dnd handlers and search string */\nconst SortedUserCard: FC<ISortedUserCard> = ({\n  user,\n  highlight,\n  dragStartHandler,\n  dragEndHandler,\n}) => {\n  return (\n    <div\n      className=\"sorted-user selectable\"\n      draggable\n      onDragStart={dragStartHandler}\n      onDragEnd={dragEndHandler}\n    >\n      <UserCard user={user} highlight={highlight} />\n    </div>\n  );\n};\nexport default SortedUserCard;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useVirtual } from 'react-virtual';\nimport User from '../types/User';\nimport AppContext from './AppContext';\nimport SortedUserCard from './SortedUserCard';\n\ninterface IUsersGroup {\n  users: User[];\n  search: string;\n  num: number;\n}\n\n/** numbered group of users, placed into virtual screen for performance,\n * can be filtered by search string */\nconst UsersGroup: React.FC<IUsersGroup> = ({ users, search, num }) => {\n  const parentRef = React.useRef() as React.MutableRefObject<HTMLDivElement>;\n\n  const { setDragToFav } = useContext(AppContext);\n  const [filtered, setFiltered] = useState(users);\n  const [collapse, setCollapse] = useState(false);\n\n  const rowVirtualizer = useVirtual({\n    size: filtered.length,\n    estimateSize: React.useCallback(() => 88, []),\n    parentRef,\n  });\n\n  // filter users whenever search or user array change\n  useEffect(() => {\n    setFiltered(\n      users.filter(\n        (user) =>\n          `${user.name.first} ${user.name.last}`\n            .toLowerCase()\n            .indexOf(search.toLowerCase()) !== -1\n      )\n    );\n  }, [users, search, setFiltered]);\n\n  /** toggles collapse flag */\n  const handleCollapse = () => {\n    setCollapse(!collapse);\n  };\n\n  /** enables fav zone style and sets item indexes to transfer */\n  const dragStartHandler = (\n    e: React.DragEvent<HTMLDivElement>,\n    i: number,\n    id: number\n  ) => {\n    e.dataTransfer.setData('add-favorite', JSON.stringify([i, id]));\n    setDragToFav(true);\n  };\n\n  /** disables fav zone style */\n  const dragEndHandler = () => {\n    setDragToFav(false);\n  };\n\n  return (\n    <div className=\"users-group\">\n      <h3\n        className={\n          'group-header ' +\n          (filtered.length === 0 ? 'disabled ' : ' ') +\n          (collapse ? 'collapsed ' : ' ')\n        }\n        onClick={handleCollapse}\n      >\n        {num * 10 + 1}-{num * 10 + 10}\n      </h3>\n      <div className={collapse ? 'hideme' : ''}>\n        <div\n          className=\"list-outer\"\n          ref={parentRef}\n          style={{\n            maxHeight: `100vh`,\n            overflow: 'auto',\n          }}\n        >\n          <div\n            className=\"list-inner\"\n            style={{\n              height: `${rowVirtualizer.totalSize}px`,\n              width: '100%',\n              position: 'relative',\n            }}\n          >\n            {rowVirtualizer.virtualItems.map((virtualRow) => {\n              const user = filtered[virtualRow.index];\n              return (\n                <div\n                  key={virtualRow.index}\n                  style={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: `${virtualRow.size}px`,\n                    transform: `translateY(${virtualRow.start}px)`,\n                  }}\n                >\n                  <SortedUserCard\n                    user={user}\n                    highlight={search}\n                    dragStartHandler={(e) =>\n                      dragStartHandler(e, num, users.indexOf(user))\n                    }\n                    dragEndHandler={() => dragEndHandler()}\n                    key={user.login.uuid}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default UsersGroup;\n","import { useContext, useEffect, useRef, useState } from 'react';\nimport User from '../types/User';\nimport AppContext from './AppContext';\nimport UsersGroup from './UsersGroup';\n\n/** sorted users zone with all the stuff 👽 */\nconst SortedUsers = () => {\n  const inputRef = useRef() as React.MutableRefObject<HTMLInputElement>;\n\n  // sets event listener for selecting search input when typing\n  useEffect(() => {\n    document.addEventListener('keydown', () => inputRef.current.focus());\n  }, []);\n\n  const { loading, users, sortedUsers, setSortedUsers } =\n    useContext(AppContext);\n  const [search, setSearch] = useState('');\n\n  /** sort User[] into User[][i], where i is like\n   * 10i + 1 to 10i + 10 of their registered.age */\n  const sortUsersByDecAge = (users: User[]) => {\n    let sorted = Array<User[]>();\n    users.forEach((user) => {\n      let i = 0;\n      for (; user.registered.age > (i + 1) * 10; i++) {}\n      sorted[i] ? sorted[i].push(user) : (sorted[i] = [user]);\n    });\n    return sorted;\n  };\n\n  /** sets search string from input value */\n  const searchHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  };\n\n  // sorts users whenever they change\n  useEffect(() => {\n    setSortedUsers(sortUsersByDecAge(users));\n  }, [users, setSortedUsers]);\n\n  return (\n    <div className=\"sorted-users column\">\n      <input\n        type=\"text\"\n        ref={inputRef}\n        placeholder=\"Поиск по имени и фамилии...\"\n        onChange={searchHandler}\n      />\n      {loading ? (\n        <div className=\"loader\" />\n      ) : (\n        sortedUsers.map((users, i) => (\n          <UsersGroup users={users} search={search} num={i} key={i} />\n        ))\n      )}\n    </div>\n  );\n};\nexport default SortedUsers;\n","import { FC } from 'react';\nimport User from '../types/User';\nimport UserCard from './UserCard';\n\ninterface IFavoriteUserCard {\n  user: User;\n  removeHandler: () => void;\n  dragStartHandler: () => void;\n  dragEnterHandler: (e: React.DragEvent<HTMLDivElement>) => void;\n  dragLeaveHandler: (e: React.DragEvent<HTMLDivElement>) => void;\n  dragOverHandler: (e: React.DragEvent<HTMLDivElement>) => void;\n  dropHandler: (e: React.DragEvent<HTMLDivElement>) => void;\n}\n\n/** wrapper for UserCard taking dnd handlers and remove handler */\nconst FavoriteUserCard: FC<IFavoriteUserCard> = ({\n  user,\n  removeHandler,\n  dragStartHandler,\n  dragEnterHandler,\n  dragLeaveHandler,\n  dragOverHandler,\n  dropHandler,\n}) => {\n  return (\n    <div\n      className=\"favorite-user selectable\"\n      draggable\n      onDragStart={dragStartHandler}\n      onDragEnter={dragEnterHandler}\n      onDragLeave={dragLeaveHandler}\n      onDragOver={dragOverHandler}\n      onDrop={dropHandler}\n    >\n      <UserCard\n        user={user}\n        append={<button onClick={removeHandler}>X</button>}\n      />\n    </div>\n  );\n};\nexport default FavoriteUserCard;\n","import React, { useContext, useState } from 'react';\nimport User from '../types/User';\nimport AppContext from './AppContext';\nimport FavoriteUserCard from './FavoriteUserCard';\n\n/** favorite users zone with all the stuff 👽 */\nconst FavoriteUsers = () => {\n  const { dragToFav, sortedUsers, favoriteUsers, setFavoriteUsers } =\n    useContext(AppContext);\n  const [dragged, setDragged] = useState<number>(0);\n\n  /** move item in arr from from to to, shifting other elements */\n  const moveInArray = (arr: any[], from: number, to: number) => {\n    let temp = [...arr];\n    const item = temp.splice(from, 1);\n    temp.splice(to, 0, item[0]);\n    return temp;\n  };\n\n  /** add new user to favorites with id / shifts already existing user to id */\n  const addFavoriteUser = (user: User, id: number) => {\n    if (!favoriteUsers.includes(user))\n      setFavoriteUsers(\n        moveInArray([...favoriteUsers, user], favoriteUsers.length, id)\n      );\n    else\n      setFavoriteUsers(\n        moveInArray(favoriteUsers, favoriteUsers.indexOf(user), id)\n      );\n  };\n\n  /** removes user from favorites by its id */\n  const removeFavoriteUser = (id: number) => {\n    setFavoriteUsers(\n      favoriteUsers.filter((user) => user !== favoriteUsers[id])\n    );\n  };\n\n  /** start of dragging! */\n  const dragStartHandler = (id: number) => {\n    setDragged(id);\n  };\n\n  /** sets selected to potential target */\n  const dragEnterHandler = (e: React.DragEvent<HTMLDivElement>) => {\n    e.currentTarget.classList.add('selected');\n  };\n\n  /** remove selected from potential target */\n  const dragLeaveHandler = (e: React.DragEvent<HTMLDivElement>) => {\n    e.currentTarget.classList.remove('selected');\n  };\n\n  /** preventing all the stuff, just in case */\n  const dragOverHandler = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  /** drops item to the target and put it in its place */\n  const dropHandler = (e: React.DragEvent<HTMLDivElement>, id: number) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const newFavorite = e.dataTransfer.getData('add-favorite');\n    if (newFavorite) {\n      const ids: number[] = JSON.parse(newFavorite);\n      addFavoriteUser(sortedUsers[ids[0]][ids[1]], id);\n    } else {\n      setFavoriteUsers(moveInArray(favoriteUsers, dragged, id));\n    }\n    e.currentTarget.classList.remove('selected');\n  };\n\n  return (\n    <div\n      onDragOver={(e) => dragOverHandler(e)}\n      onDrop={(e) => dropHandler(e, favoriteUsers.length)}\n      className={'favorite-users column' + (dragToFav ? ' droppable' : '')}\n    >\n      <h2>ИЗБРАННЫЕ</h2>\n      {favoriteUsers.map((user, id) => (\n        <FavoriteUserCard\n          user={user}\n          removeHandler={() => removeFavoriteUser(id)}\n          dragStartHandler={() => dragStartHandler(id)}\n          dragEnterHandler={(e) => dragEnterHandler(e)}\n          dragLeaveHandler={(e) => dragLeaveHandler(e)}\n          dragOverHandler={(e) => dragOverHandler(e)}\n          dropHandler={(e) => dropHandler(e, id)}\n          key={id}\n        />\n      ))}\n    </div>\n  );\n};\nexport default FavoriteUsers;\n","import { useEffect, useState } from 'react';\nimport usersApi from './api/users';\nimport User from './types/User';\nimport './App.scss';\nimport SortedUsers from './components/SortedUsers';\nimport FavoriteUsers from './components/FavoriteUsers';\nimport AppContext from './components/AppContext';\n\nfunction App() {\n  const [users, setUsers] = useState<User[]>([]);\n  const [sortedUsers, setSortedUsers] = useState<User[][]>([]);\n  const [favoriteUsers, setFavoriteUsers] = useState<User[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [dragToFav, setDragToFav] = useState(false);\n\n  const context = {\n    users,\n    setUsers,\n    sortedUsers,\n    setSortedUsers,\n    favoriteUsers,\n    setFavoriteUsers,\n    loading,\n    setLoading,\n    dragToFav,\n    setDragToFav,\n  };\n\n  // fetch users from the api and load them\n  useEffect(() => {\n    usersApi.getUsers(5000).then((users) => {\n      setUsers(users);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <AppContext.Provider value={context}>\n        <div className=\"users-ui\">\n          <SortedUsers />\n          <FavoriteUsers />\n        </div>\n      </AppContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}